// Code generated by MockGen. DO NOT EDIT.
// Source: message/message.go

// Package mock_message is a generated GoMock package.
package mock_message

import (
	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMessage is a mock of Message interface
type MockMessage struct {
	ctrl     *gomock.Controller
	recorder *MockMessageMockRecorder
}

// MockMessageMockRecorder is the mock recorder for MockMessage
type MockMessageMockRecorder struct {
	mock *MockMessage
}

// NewMockMessage creates a new mock instance
func NewMockMessage(ctrl *gomock.Controller) *MockMessage {
	mock := &MockMessage{ctrl: ctrl}
	mock.recorder = &MockMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMessage) EXPECT() *MockMessageMockRecorder {
	return m.recorder
}

// PostReminder mocks base method
func (m *MockMessage) PostReminder(c *gin.Context) {
	m.ctrl.Call(m, "PostReminder", c)
}

// PostReminder indicates an expected call of PostReminder
func (mr *MockMessageMockRecorder) PostReminder(c interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostReminder", reflect.TypeOf((*MockMessage)(nil).PostReminder), c)
}

// PostReport mocks base method
func (m *MockMessage) PostReport(c *gin.Context) {
	m.ctrl.Call(m, "PostReport", c)
}

// PostReport indicates an expected call of PostReport
func (mr *MockMessageMockRecorder) PostReport(c interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostReport", reflect.TypeOf((*MockMessage)(nil).PostReport), c)
}

// GetStatus mocks base method
func (m *MockMessage) GetStatus(c *gin.Context) {
	m.ctrl.Call(m, "GetStatus", c)
}

// GetStatus indicates an expected call of GetStatus
func (mr *MockMessageMockRecorder) GetStatus(c interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatus", reflect.TypeOf((*MockMessage)(nil).GetStatus), c)
}
